/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  dev                                   |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     dev;
    format      ascii;
    class       dictionary;
    location    "constant";
    object      photoBioProperties;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
photoBio        on;
photoBioModel   photoBioDOM;

photoBioDOMCoeffs
{
    nPhi        4;
    nTheta      4;
    nBand       5;
    nPixPhi     10;
    nPixTheta   10;
    {
        bandLim0    (350e-9 420e-9);
        bandLim1    (450e-9 480e-9);
        bandLim2    (500e-9 530e-9);
        bandLim3    (570e-9 600e-9);
        bandLim4    (820e-9 860e-9);
    }

    nRegion     2;
    {
        region0 // ppb broth
        {
            inScatterModel  schlickModel;
            schlickModelCoeffs
            {
                gFactor         0.99;
            }

            extinctionModel     wideBandExtinctionModel;
            wideBandExtinctionModelCoeffs
            {
                absorption true;
                scattering true;
                nParticipants   3;
                {
                    participant0 // if first run, impose value, if already solved for ppb field, read the value at every point in the domain
                    {
                        value       (readIfPresent, imposeValue);
                        absorptionCoeff (a0 a1 a2 a3 a4); // ppb biomass absorptionCoeff
                        scatteringCoeff (s0 s1 s2 s3 s4);
                    }
                    participant1       // composite biomass
                    {
                        value (readIfPresent, imposeValue);
                        absorptionCoeff (a0 a1 a2 a3 a4); // specific absorption coeff
                        scatteringCoeff (s0 s1 s2 s3 s4);
                    }
                    participant2  // inert solids
                    {
                        value (readIfPresent, imposeValue);
                        absorptionCoeff (a0 a1 a2 a3 a4);
                        scatteringCoeff (s0 s1 s2 s3 s4);
                    }
                }
            }
        }
        region1  //air or solid
        {
            inScatterModel  noInScatter;
            extinctionModel     wideBandExtinctionModel;
            wideBandExtinctionModelCoeffs
            {
                absorption false;
                scattering true;
                nParticipants   1; // air or solid
                {
                    participant0
                    {
                        value       concentrationOfAir
                        scatteringCoeff (s0 s1 s2 s3 s4);
                    }
                }
            }
        }
    }
}
